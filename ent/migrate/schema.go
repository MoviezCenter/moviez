// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GenresColumns holds the columns for the "genres" table.
	GenresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type_id", Type: field.TypeUint32},
	}
	// GenresTable holds the schema information for the "genres" table.
	GenresTable = &schema.Table{
		Name:       "genres",
		Columns:    GenresColumns,
		PrimaryKey: []*schema.Column{GenresColumns[0]},
	}
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "overview", Type: field.TypeString},
		{Name: "release_date", Type: field.TypeString},
		{Name: "poster_path", Type: field.TypeString},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "comment", Type: field.TypeString},
		{Name: "rating", Type: field.TypeFloat32},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "movie_id", Type: field.TypeInt, Nullable: true},
		{Name: "creator_id", Type: field.TypeInt, Nullable: true},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reviews_movies_reviews",
				Columns:    []*schema.Column{ReviewsColumns[5]},
				RefColumns: []*schema.Column{MoviesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "reviews_users_reviews",
				Columns:    []*schema.Column{ReviewsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// GenreMoviesColumns holds the columns for the "genre_movies" table.
	GenreMoviesColumns = []*schema.Column{
		{Name: "genre_id", Type: field.TypeInt},
		{Name: "movie_id", Type: field.TypeInt},
	}
	// GenreMoviesTable holds the schema information for the "genre_movies" table.
	GenreMoviesTable = &schema.Table{
		Name:       "genre_movies",
		Columns:    GenreMoviesColumns,
		PrimaryKey: []*schema.Column{GenreMoviesColumns[0], GenreMoviesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "genre_movies_genre_id",
				Columns:    []*schema.Column{GenreMoviesColumns[0]},
				RefColumns: []*schema.Column{GenresColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "genre_movies_movie_id",
				Columns:    []*schema.Column{GenreMoviesColumns[1]},
				RefColumns: []*schema.Column{MoviesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GenresTable,
		MoviesTable,
		ReviewsTable,
		UsersTable,
		GenreMoviesTable,
	}
)

func init() {
	ReviewsTable.ForeignKeys[0].RefTable = MoviesTable
	ReviewsTable.ForeignKeys[1].RefTable = UsersTable
	GenreMoviesTable.ForeignKeys[0].RefTable = GenresTable
	GenreMoviesTable.ForeignKeys[1].RefTable = MoviesTable
}
